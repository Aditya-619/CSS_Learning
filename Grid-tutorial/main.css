*{
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    font-family: sans-serif;
    font-size: 16px;
    line-height: 1.5;
    color: #333;
    background: #f5f5f5;
}

.container {
    max-width: 960px;
    margin: 100px auto;
    padding: 10px;
    display: grid;

    /* grid-template-columns: 1fr 3fr 1fr; this property helps you to create number of columns
       that you want like in below it is give 1fr 3 fr 1fr, so it makes 3-column layout with 
       given size in fraction(fr). You can also use pixel.*/

    /* grid-template-columns: 1fr 3fr 1fr; */

    /* grid-template-columns: repeat(3, 1fr); => This is another way of using grid-template-columns property. 
       repeat(3, 1fr) means that create 3 column of size 1 fr */

    /* grid-template-columns: repeat(3, 1fr); */

    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    

    /* column-gap: 10px */
    /* row-gap: 10px */
    gap: 10px;     /* for both row and column */

    /* grid-auto-rows: minmax(100px, auto);  This property allows you to set the size of row according to the size of
       content inside it.  minmax(100px, auto) => 100px is for those boxes which do not have
       any content and auto is for those which have */
    
    /* grid-template-rows: repeat(3, 1fr);  same sa grid -template-column but for rows*/

    /* align-items: start;  => align the items on Y-axis  */
    /* justify-content: end; => align the items on x-axis */
}

.item {
    background: steelblue;
    color: white;
    font-size: 20px;
    padding: 20px;
    border: 1px solid skyblue;
}

/* .item:nth-of-type(2) {
    height: 100px;
    width: 100px;
    
    // self is used in items instead of item that is used in container.
    align-self: center;
    justify-self: center;
} */

 /* .item:nth-of-type(1) {
    background: black;

    Below property is used to stretch a particular column to desired value like here column 1 is stretch to start 
       of the 3rd column and this lead to shifting of other columns also. similar for rows also :
       eg. grid-row-start: 2;
           grid-row-end: 5;  

    grid-column-start: 1;
    grid-column-end: 3; 

    Efficient method of using the property that is written above

    grid-column: 1 / 3;
}  */

@media(max-width: 500px) {
    .container {
        grid-template-columns: 1fr;
    }
}
